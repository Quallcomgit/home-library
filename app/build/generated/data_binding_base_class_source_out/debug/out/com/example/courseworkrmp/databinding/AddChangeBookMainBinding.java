// Generated by view binder compiler. Do not edit!
package com.example.courseworkrmp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.gridlayout.widget.GridLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.courseworkrmp.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddChangeBookMainBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button button;

  @NonNull
  public final CheckBox checkBoxFavourite;

  @NonNull
  public final CheckBox checkBoxIsRead;

  @NonNull
  public final AutoCompleteTextView editTextAuthor;

  @NonNull
  public final AutoCompleteTextView editTextGenre;

  @NonNull
  public final AutoCompleteTextView editTextTitle;

  @NonNull
  public final AutoCompleteTextView editTextWhoHasBook;

  @NonNull
  public final FloatingActionButton floatingActionButtonSaveBook;

  @NonNull
  public final GridLayout gridLayout;

  @NonNull
  public final ImageButton imageButton;

  @NonNull
  public final TextView imageButtonText;

  @NonNull
  public final Spinner spinnerChooseCentury;

  @NonNull
  public final Spinner spinnerChooseChapter;

  @NonNull
  public final Spinner spinnerChooseRack;

  @NonNull
  public final Spinner spinnerChooseShelf;

  @NonNull
  public final Spinner spinnerWhereBook;

  @NonNull
  public final TextView textViewAddToFavourite;

  @NonNull
  public final TextView textViewAdditionalInfo;

  @NonNull
  public final TextView textViewAuthor;

  @NonNull
  public final TextView textViewCentury;

  @NonNull
  public final TextView textViewChapter;

  @NonNull
  public final TextView textViewFile;

  @NonNull
  public final TextView textViewGeneralInfo;

  @NonNull
  public final TextView textViewGenre;

  @NonNull
  public final TextView textViewIsRead;

  @NonNull
  public final TextView textViewLocation;

  @NonNull
  public final TextView textViewPhoto;

  @NonNull
  public final TextView textViewRack;

  @NonNull
  public final TextView textViewShelf;

  @NonNull
  public final TextView textViewTitle;

  @NonNull
  public final TextView textViewWhereBook;

  @NonNull
  public final TextView textViewWhoHasBook;

  private AddChangeBookMainBinding(@NonNull FrameLayout rootView, @NonNull Button button,
      @NonNull CheckBox checkBoxFavourite, @NonNull CheckBox checkBoxIsRead,
      @NonNull AutoCompleteTextView editTextAuthor, @NonNull AutoCompleteTextView editTextGenre,
      @NonNull AutoCompleteTextView editTextTitle, @NonNull AutoCompleteTextView editTextWhoHasBook,
      @NonNull FloatingActionButton floatingActionButtonSaveBook, @NonNull GridLayout gridLayout,
      @NonNull ImageButton imageButton, @NonNull TextView imageButtonText,
      @NonNull Spinner spinnerChooseCentury, @NonNull Spinner spinnerChooseChapter,
      @NonNull Spinner spinnerChooseRack, @NonNull Spinner spinnerChooseShelf,
      @NonNull Spinner spinnerWhereBook, @NonNull TextView textViewAddToFavourite,
      @NonNull TextView textViewAdditionalInfo, @NonNull TextView textViewAuthor,
      @NonNull TextView textViewCentury, @NonNull TextView textViewChapter,
      @NonNull TextView textViewFile, @NonNull TextView textViewGeneralInfo,
      @NonNull TextView textViewGenre, @NonNull TextView textViewIsRead,
      @NonNull TextView textViewLocation, @NonNull TextView textViewPhoto,
      @NonNull TextView textViewRack, @NonNull TextView textViewShelf,
      @NonNull TextView textViewTitle, @NonNull TextView textViewWhereBook,
      @NonNull TextView textViewWhoHasBook) {
    this.rootView = rootView;
    this.button = button;
    this.checkBoxFavourite = checkBoxFavourite;
    this.checkBoxIsRead = checkBoxIsRead;
    this.editTextAuthor = editTextAuthor;
    this.editTextGenre = editTextGenre;
    this.editTextTitle = editTextTitle;
    this.editTextWhoHasBook = editTextWhoHasBook;
    this.floatingActionButtonSaveBook = floatingActionButtonSaveBook;
    this.gridLayout = gridLayout;
    this.imageButton = imageButton;
    this.imageButtonText = imageButtonText;
    this.spinnerChooseCentury = spinnerChooseCentury;
    this.spinnerChooseChapter = spinnerChooseChapter;
    this.spinnerChooseRack = spinnerChooseRack;
    this.spinnerChooseShelf = spinnerChooseShelf;
    this.spinnerWhereBook = spinnerWhereBook;
    this.textViewAddToFavourite = textViewAddToFavourite;
    this.textViewAdditionalInfo = textViewAdditionalInfo;
    this.textViewAuthor = textViewAuthor;
    this.textViewCentury = textViewCentury;
    this.textViewChapter = textViewChapter;
    this.textViewFile = textViewFile;
    this.textViewGeneralInfo = textViewGeneralInfo;
    this.textViewGenre = textViewGenre;
    this.textViewIsRead = textViewIsRead;
    this.textViewLocation = textViewLocation;
    this.textViewPhoto = textViewPhoto;
    this.textViewRack = textViewRack;
    this.textViewShelf = textViewShelf;
    this.textViewTitle = textViewTitle;
    this.textViewWhereBook = textViewWhereBook;
    this.textViewWhoHasBook = textViewWhoHasBook;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddChangeBookMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddChangeBookMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_change_book_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddChangeBookMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.checkBoxFavourite;
      CheckBox checkBoxFavourite = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxFavourite == null) {
        break missingId;
      }

      id = R.id.checkBoxIsRead;
      CheckBox checkBoxIsRead = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxIsRead == null) {
        break missingId;
      }

      id = R.id.editTextAuthor;
      AutoCompleteTextView editTextAuthor = ViewBindings.findChildViewById(rootView, id);
      if (editTextAuthor == null) {
        break missingId;
      }

      id = R.id.editTextGenre;
      AutoCompleteTextView editTextGenre = ViewBindings.findChildViewById(rootView, id);
      if (editTextGenre == null) {
        break missingId;
      }

      id = R.id.editTextTitle;
      AutoCompleteTextView editTextTitle = ViewBindings.findChildViewById(rootView, id);
      if (editTextTitle == null) {
        break missingId;
      }

      id = R.id.editTextWhoHasBook;
      AutoCompleteTextView editTextWhoHasBook = ViewBindings.findChildViewById(rootView, id);
      if (editTextWhoHasBook == null) {
        break missingId;
      }

      id = R.id.floatingActionButtonSaveBook;
      FloatingActionButton floatingActionButtonSaveBook = ViewBindings.findChildViewById(rootView, id);
      if (floatingActionButtonSaveBook == null) {
        break missingId;
      }

      id = R.id.gridLayout;
      GridLayout gridLayout = ViewBindings.findChildViewById(rootView, id);
      if (gridLayout == null) {
        break missingId;
      }

      id = R.id.imageButton;
      ImageButton imageButton = ViewBindings.findChildViewById(rootView, id);
      if (imageButton == null) {
        break missingId;
      }

      id = R.id.imageButtonText;
      TextView imageButtonText = ViewBindings.findChildViewById(rootView, id);
      if (imageButtonText == null) {
        break missingId;
      }

      id = R.id.spinnerChooseCentury;
      Spinner spinnerChooseCentury = ViewBindings.findChildViewById(rootView, id);
      if (spinnerChooseCentury == null) {
        break missingId;
      }

      id = R.id.spinnerChooseChapter;
      Spinner spinnerChooseChapter = ViewBindings.findChildViewById(rootView, id);
      if (spinnerChooseChapter == null) {
        break missingId;
      }

      id = R.id.spinnerChooseRack;
      Spinner spinnerChooseRack = ViewBindings.findChildViewById(rootView, id);
      if (spinnerChooseRack == null) {
        break missingId;
      }

      id = R.id.spinnerChooseShelf;
      Spinner spinnerChooseShelf = ViewBindings.findChildViewById(rootView, id);
      if (spinnerChooseShelf == null) {
        break missingId;
      }

      id = R.id.spinnerWhereBook;
      Spinner spinnerWhereBook = ViewBindings.findChildViewById(rootView, id);
      if (spinnerWhereBook == null) {
        break missingId;
      }

      id = R.id.textViewAddToFavourite;
      TextView textViewAddToFavourite = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddToFavourite == null) {
        break missingId;
      }

      id = R.id.textViewAdditionalInfo;
      TextView textViewAdditionalInfo = ViewBindings.findChildViewById(rootView, id);
      if (textViewAdditionalInfo == null) {
        break missingId;
      }

      id = R.id.textViewAuthor;
      TextView textViewAuthor = ViewBindings.findChildViewById(rootView, id);
      if (textViewAuthor == null) {
        break missingId;
      }

      id = R.id.textViewCentury;
      TextView textViewCentury = ViewBindings.findChildViewById(rootView, id);
      if (textViewCentury == null) {
        break missingId;
      }

      id = R.id.textViewChapter;
      TextView textViewChapter = ViewBindings.findChildViewById(rootView, id);
      if (textViewChapter == null) {
        break missingId;
      }

      id = R.id.textViewFile;
      TextView textViewFile = ViewBindings.findChildViewById(rootView, id);
      if (textViewFile == null) {
        break missingId;
      }

      id = R.id.textViewGeneralInfo;
      TextView textViewGeneralInfo = ViewBindings.findChildViewById(rootView, id);
      if (textViewGeneralInfo == null) {
        break missingId;
      }

      id = R.id.textViewGenre;
      TextView textViewGenre = ViewBindings.findChildViewById(rootView, id);
      if (textViewGenre == null) {
        break missingId;
      }

      id = R.id.textViewIsRead;
      TextView textViewIsRead = ViewBindings.findChildViewById(rootView, id);
      if (textViewIsRead == null) {
        break missingId;
      }

      id = R.id.textViewLocation;
      TextView textViewLocation = ViewBindings.findChildViewById(rootView, id);
      if (textViewLocation == null) {
        break missingId;
      }

      id = R.id.textViewPhoto;
      TextView textViewPhoto = ViewBindings.findChildViewById(rootView, id);
      if (textViewPhoto == null) {
        break missingId;
      }

      id = R.id.textViewRack;
      TextView textViewRack = ViewBindings.findChildViewById(rootView, id);
      if (textViewRack == null) {
        break missingId;
      }

      id = R.id.textViewShelf;
      TextView textViewShelf = ViewBindings.findChildViewById(rootView, id);
      if (textViewShelf == null) {
        break missingId;
      }

      id = R.id.textViewTitle;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      id = R.id.textViewWhereBook;
      TextView textViewWhereBook = ViewBindings.findChildViewById(rootView, id);
      if (textViewWhereBook == null) {
        break missingId;
      }

      id = R.id.textViewWhoHasBook;
      TextView textViewWhoHasBook = ViewBindings.findChildViewById(rootView, id);
      if (textViewWhoHasBook == null) {
        break missingId;
      }

      return new AddChangeBookMainBinding((FrameLayout) rootView, button, checkBoxFavourite,
          checkBoxIsRead, editTextAuthor, editTextGenre, editTextTitle, editTextWhoHasBook,
          floatingActionButtonSaveBook, gridLayout, imageButton, imageButtonText,
          spinnerChooseCentury, spinnerChooseChapter, spinnerChooseRack, spinnerChooseShelf,
          spinnerWhereBook, textViewAddToFavourite, textViewAdditionalInfo, textViewAuthor,
          textViewCentury, textViewChapter, textViewFile, textViewGeneralInfo, textViewGenre,
          textViewIsRead, textViewLocation, textViewPhoto, textViewRack, textViewShelf,
          textViewTitle, textViewWhereBook, textViewWhoHasBook);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
